<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="dao.UserDao">
    <select id="findUserByEmail" parameterType="string" resultType="entity.User">
        select
          cn_user_id as id,
          cn_user_email as email,
          cn_user_password as password,
          cn_user_token as token,
          cn_user_nick as nick,
          cn_user_actived as actived,
          cn_user_active_code as active_code,
          cn_user_expire_time as expireTime
        from cn_user
        where cn_user_email=#{email}
    </select>
    
    <select id="findUserByToken" parameterType="string" resultType="entity.User">
	    select
          cn_user_id as id,
          cn_user_email as email,
          cn_user_password as password,
          cn_user_token as token,
          cn_user_nick as nick,
          cn_user_actived as actived,
          cn_user_active_code as active_code,
          cn_user_expire_time as expireTime
        from cn_user
        where cn_user_token=#{token}
    </select>

    <insert id="addUser" parameterType="entity.User">
        insert into cn_user(
            cn_user_id,
            cn_user_email,
            cn_user_password,
            cn_user_token,
            cn_user_nick,
            cn_user_actived,
            cn_user_active_code,
            cn_user_expire_time)
        values(
            #{id},
            #{email},
            #{password},
            #{token},
            #{nick},
            #{actived},
            #{active_code},
            #{expireTime}
        )
    </insert>

    <select id="findUserById" parameterType="string" resultType="entity.User">
        select
            cn_user_id as id,
            cn_user_email as email,
            cn_user_password as password,
            cn_user_nick as nick,
            cn_user_token as token,
            cn_user_actived as actived,
            cn_user_active_code as active_code,
            cn_user_expire_time as expireTime
        from
            cn_user
        where
            cn_user_id = #{userId}
    </select>
    
    <update id="updateUser" parameterType="entity.User">
    	update cn_user
        <trim prefix="set" suffixOverrides=",">
	        <if test="user.id!=null">
	            cn_user_password=#{user.password},
	        </if>
	        <if test="user.nick!=null">
	           cn_user_nick=#{user.nick},
	        </if>
	        <if test="user.token!=null">
	            cn_user_token=#{user.token},
	        </if>
	        <if test="user.actived!=0">
	            cn_user_actived=#{user.actived},
	        </if>
	        <if test="user.active_code!=null">
	            cn_user_active_code=#{user.active_code},
	        </if>
	        <if test="user.expireTime!=null">
	            cn_user_expire_time=#{user.expireTime},
	        </if>
        </trim>
        <where>cn_user_email=#{user.email}</where>
    </update>

</mapper>